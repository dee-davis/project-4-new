<h1>New Career</h1>



<%= link_to 'Back', careers_path %>

<div>
<%= form_for @career do |f| %>
  <div class="input-field col s12", textarea id="textarea1" class="materialize-textarea"></textarea>
    <div>
    <%= f.label "Title" %><br>
    <%= f.text_field :title,
    oninvalid: "setCustomValidity(' Special Characters are not allowed ')",
    onchange: "try{setCustomValidity('')}catch(e){}", pattern: "^[^.]*$", required: true %>
  </div>
  <div>
    <%= f.text_field :city, id: "autocomplete", placeholder: "Enter job city",
             onFocus: "geolocate()", required: true %>
           </div>
  </div>
    <br>
    <br>
    <div>
    <%= f.text_area :content, placeholder: 'Content' %>
  </div>
  </div>
  <div class="actions">
    <%= f.submit "Create Career", class: "btn btn-default" %>
  </div>
<% end %>
</div>
<script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
      }



      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD_Zl_OL2zxoCiAdavYgICJUAtUssIjgL4&libraries=places&callback=initAutocomplete"
        async defer></script>
